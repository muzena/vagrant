# -*- mode: ruby -*-
# vi: set ft=ruby :

# example command:
# KRNLVER=4.8.10 OVSVER=2.6.1 vagrant up
#

krnlver=ENV['KRNLVER']
#ovsver=ENV['OVSVER']

#if krnlver.nil? or ovsver.nil? then
#  abort "need KRNLVER and OVSVER environment variables"
#end

if krnlver.nil? then
  abort "need KRNLVER"
end

Vagrant.configure("2") do |config|

  config.vm.box = "stretch-" + krnlver
  config.vm.box_url = "file://../boxes/stretch-" + krnlver + ".box"
  config.vm.hostname = "bldovs"
  config.vm.synced_folder "../packages", "/vagrant_packages", disabled: false
  config.vm.provision "shell" do |s|
    s.name = "building ..."
    s.inline = <<-SHELL
      # make sure things are updated
      sed -r -i 's_http://[^/]+/_http://192.168.10.10:3142/_g' /etc/apt/sources.list
      apt-get update
      apt-get -y upgrade
      echo "install necessary packages..."
      apt-get -y --no-install-recommends \
        install \
          git \
          build-essential fakeroot dh-autoreconf procps \
          python-twisted-conch python-zopeinterface python-six \
          graphviz openssl libssl-dev python-all unzip \
          module-assistant libcap-ng-dev
      echo "install header files..."
      CUSTOM=/vagrant_packages/linux-headers-$(uname -r)-1_amd64.deb
      if [[ -e ${CUSTOM} ]]; then
        dpkg -i ${CUSTOM}
      else
        apt-get -y install linux-headers-$(uname -r)
        fi
      echo "obtain and expand the most recent version of code ..."
      wget -q --no-check-certificate https://github.com/openvswitch/ovs/archive/master.zip
      unzip master.zip
      cd ovs-master
      #wget -q http://openvswitch.org/releases/openvswitch-OVSVER.tar.gz
      #tar -zxvf openvswitch-OVSVER.tar.gz
      #cd openvswitch-OVSVER
      git apply /vagrant/patch1.msg
      echo "start the build process ... "
      dpkg-checkbuilddeps
      DEB_BUILD_OPTIONS='parallel=2 nocheck' fakeroot debian/rules binary
      echo "build datapath ..."
      cd ..
      dpkg -i openvswitch-datapath-source_*.deb 
      m-a prepare
      m-a -t build openvswitch-datapath
      echo "move results to the shared drive ..."
      mv *.deb /vagrant_packages/
      echo "move modules to shared drive ..."
      chown vagrant.vagrant /usr/src/openvswitch*
      mv /usr/src/openvswitch-datapath-module-*.deb /vagrant_packages/
      echo "done."
    SHELL
#    s.inline = s.inline.gsub(/OVSVER/,ovsver)
  end

  config.vm.provider "virtualbox" do |vb|
    vb.name = "bldovs"
    vb.cpus = 2
    vb.memory = "2048"
    vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
  end

  config.vm.network :private_network, virtualbox__intnet: "mgmt", ip: "192.168.10.33/24"

end
