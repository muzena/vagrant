# -*- mode: ruby -*-
# vi: set ft=ruby :

# example command:
# KRNLVER=4.8.10 OVSVER=2.6.1 vagrant up
#

Vagrant.configure("2") do |config|

  krnlver=ENV['KRNLVER']
  ovsver=ENV['OVSVER']

  if krnlver.nil? or ovsver.nil? then
    abort "need KRNLVER and OVSVER environment variables"
  end

  config.vm.box = "stretch-" + krnlver
  config.vm.box_url = "file://~/vagrant/boxes/stretch-" + krnlver + ".box"
  config.vm.hostname = "bldovs"
  config.vm.synced_folder "../packages", "/vagrant_packages", disabled: false
  config.vm.provision "shell" do |s|
    s.name = "building ..."
    s.inline = <<-SHELL
      # make sure things are updated
      apt-get update
      apt-get -y upgrade
      echo "install necessary packages..."
      apt-get -y install build-essential fakeroot dh-autoreconf procps \
                    python-twisted-conch python-zopeinterface python-six \
                    graphviz openssl libssl-dev python-all unzip \
                    module-assistant
      dpkg -i /vagrant_packages/linux-headers-$(uname -r)_1.0_amd64.deb
      echo "obtain and expand the most recent version of code ..."
      #wget -q --no-check-certificate https://github.com/openvswitch/ovs/archive/master.zip
      #unzip master.zip
      #cd ovs-master
      wget -q http://openvswitch.org/releases/openvswitch-OVSVER.tar.gz
      tar -zxvf openvswitch-OVSVER.tar.gz
      cd openvswitch-OVSVER
      echo "start the build process ... "
      dpkg-checkbuilddeps
      DEB_BUILD_OPTIONS='parallel=2 nocheck' fakeroot debian/rules binary
      echo "build datapath ..."
      cd ..
      dpkg -i openvswitch-datapath-source_*.deb 
      m-a prepare
      m-a -t build openvswitch-datapath
      echo "move results to the shared drive ..."
      mv *.deb /vagrant_packages/
      echo "move modules to shared drive ..."
      chown vagrant.vagrant /usr/src/openvswitch*
      mv /usr/src/openvswitch-datapath-module-*.deb /vagrant_packages/
      echo "done."
    SHELL
    s.inline = s.inline.gsub(/OVSVER/,ovsver)
  end
  config.vm.provider "virtualbox" do |v|
    v.name = "bldovs"
    v.cpus = 2
    v.memory = "2048"
  end


end
