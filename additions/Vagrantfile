# -*- mode: ruby -*-
# vi: set ft=ruby :

# To run this file for upgrade images and GuestAdditions:
#   use applicable KRNLVER and VBOXVER settings
#
# this is a three step process
# #1 the 'vagrant up' step requires a synced folder to obtain the new kernel version package
# #2 the first 'vagrant reload' step will restart the vm, but since the GuestAdditions won't 
#     work with the new kernel, a synced_folder can't be defined, so needs to be disabled
#     during the process of rebuilding the GuestAdditions
# #3 the final 'vagrant reload' restarts into the vm to reset key back to default to be used as a box

sync=ENV['SYNC_DISABLED']
krnlverbase=ENV['KRNLVERBASE']
krnlverbld=ENV['KRNLVERBLD']
vboxver=ENV['VBOXVER']

if sync.nil? then
  sync = false
end

if krnlverbase.nil? or krnlverbld.nil? or vboxver.nil? then
  puts "steps required:"
  puts "  KRNLVERBASE=x.x.x KRNLVERBLD=y.y.y VBOXVER=z.z.z vagrant up --provision-with newkernel"
  puts "  KRNLVERBASE=x.x.x KRNLVERBLD=y.y.y VBOXVER=z.z.z vagrant halt"
  puts "  KRNLVERBASE=x.x.x KRNLVERBLD=y.y.y VBOXVER=z.z.z SYNC_DISABLED=true vagrant up --provision-with newadditions"
  puts "  KRNLVERBASE=x.x.x KRNLVERBLD=y.y.y VBOXVER=z.z.z vagrant reload --provision-with fixkey"
  puts "perform packaging, then"
  puts "  KRNLVERBASE=x.x.x KRNLVERBLD=y.y.y VBOXVER=z.z.z vagrant destroy -f"
  abort "--"
end

Vagrant.configure("2") do |config|

  vmname="stretch-" + krnlverbld

  puts "variables: #{vmname}, #{krnlverbase}, #{krnlverbld}, #{vboxver}, #{sync}"

  config.vm.box = "stretch-" + krnlverbase
  config.vm.box_url = "file://~/vagrant/boxes/stretch-" + krnlverbase + ".box"
  config.vm.hostname = "stretch"
  
  # disable during build process, as directories are not available
  config.vm.synced_folder ".", "/vagrant", disabled: sync
  config.vm.synced_folder "../packages", "/vagrant_packages", disabled: sync

  # install new kernel and headers
  config.vm.provision "newkernel", type: "shell" do |s|

    s.name = "newkernel"
    s.inline = <<-SHELL
      sed -r -i 's_http://[^:/]+/_http://192.168.10.10:3142/_g' /etc/apt/sources.list
      dpkg -i /vagrant_packages/linux-image-KRNLVER-custom_1.0_amd64.deb
      dpkg -i /vagrant_packages/linux-headers-KRNLVER-custom_1.0_amd64.deb
      echo "done."
    SHELL
    s.inline = s.inline.gsub(/KRNLVER/,krnlverbld)
    #puts s.inline
  end
  # installs additions compatible with new kernel
  config.vm.provision "newadditions", type: "shell" do |s|

    s.name = "newadditions"
    s.inline = <<-SHELL
      bash /home/vagrant/additions.sh build VBOXVER
    SHELL
    s.inline = s.inline.gsub(/VBOXVER/, vboxver)
  end
  # resets key back to default
  config.vm.provision "fixkey", type: "shell" do |s|
    s.name = "fixkey"
    s.inline = <<-SHELL
      bash /home/vagrant/additions.sh key
      shutdown -h now
    SHELL
  end
  config.vm.provider "virtualbox" do |v|
    v.name = vmname
  end

end
